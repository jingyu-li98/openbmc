diff --git a/drivers/hwmon/lm90.c b/drivers/hwmon/lm90.c
index 1c9493c70813..a22a9439681b 100644
--- a/drivers/hwmon/lm90.c
+++ b/drivers/hwmon/lm90.c
@@ -113,7 +113,7 @@ static const unsigned short normal_i2c[] = {
 	0x4d, 0x4e, 0x4f, I2C_CLIENT_END };
 
 enum chips { lm90, adm1032, lm99, lm86, max6657, max6659, adt7461, max6680,
-	max6646, w83l771, max6696, sa56004, g781, tmp451, tmp461, max6654 };
+	max6646, w83l771, max6696, sa56004, g781, tmp451, tmp461, max6654, ct7451 };
 
 /*
  * The LM90 registers
@@ -176,6 +176,9 @@ enum chips { lm90, adm1032, lm99, lm86, max6657, max6659, adt7461, max6680,
 #define TMP461_REG_CHEN			0x16
 #define TMP461_REG_DFC			0x24
 
+#define CT7451_REG_R_LOCAL_TEMPL	0x10
+#define CT7451_REG_R_REMOTE_TEMPL	0x15
+
 /*
  * Device flags
  */
@@ -239,6 +242,7 @@ static const struct i2c_device_id lm90_id[] = {
 	{ "sa56004", sa56004 },
 	{ "tmp451", tmp451 },
 	{ "tmp461", tmp461 },
+	{ "ct7451", ct7451 },
 	{ }
 };
 MODULE_DEVICE_TABLE(i2c, lm90_id);
@@ -340,6 +344,10 @@ static const struct of_device_id __maybe_unused lm90_of_match[] = {
 		.compatible = "ti,tmp461",
 		.data = (void *)tmp461
 	},
+	{
+		.compatible = "sensylink,ct7451",
+		.data = (void *)ct7451
+	},
 	{ },
 };
 MODULE_DEVICE_TABLE(of, lm90_of_match);
@@ -353,6 +361,7 @@ struct lm90_params {
 				/* Upper 8 bits for max6695/96 */
 	u8 max_convrate;	/* Maximum conversion rate register value */
 	u8 reg_local_ext;	/* Extended local temp register (optional) */
+	u8 reg_remote_ext;
 };
 
 static const struct lm90_params lm90_params[] = {
@@ -455,6 +464,15 @@ static const struct lm90_params lm90_params[] = {
 		.max_convrate = 9,
 		.reg_local_ext = TMP451_REG_R_LOCAL_TEMPL,
 	},
+
+	[ct7451] = {
+		.flags = LM90_HAVE_OFFSET | LM90_HAVE_REM_LIMIT_EXT
+		  | LM90_HAVE_BROKEN_ALERT | LM90_HAVE_EXTENDED_TEMP | LM90_HAVE_CRIT,
+		.alert_alarms = 0x7c,
+		.max_convrate = 9,
+		.reg_local_ext = CT7451_REG_R_LOCAL_TEMPL,
+		.reg_remote_ext = CT7451_REG_R_REMOTE_TEMPL,
+	},
 };
 
 /*
@@ -513,6 +531,7 @@ struct lm90_data {
 				/* Upper 8 bits for max6695/96 */
 	u8 max_convrate;	/* Maximum conversion rate */
 	u8 reg_local_ext;	/* local extension register offset */
+	u8 reg_remote_ext;	/* remote extension register offset */
 
 	/* registers values */
 	s8 temp8[TEMP8_REG_NUM];
@@ -813,11 +832,20 @@ static int lm90_update_device(struct device *dev)
 				return val;
 			data->temp11[LOCAL_TEMP] = val << 8;
 		}
-		val = lm90_read16(client, LM90_REG_R_REMOTE_TEMPH,
-				  LM90_REG_R_REMOTE_TEMPL);
-		if (val < 0)
-			return val;
-		data->temp11[REMOTE_TEMP] = val;
+		if (data->reg_remote_ext) {
+			val = lm90_read16(client, LM90_REG_R_REMOTE_TEMPH,
+				  	data->reg_remote_ext);
+			if (val < 0)
+				return val;
+			data->temp11[REMOTE_TEMP] = val;
+		} else {
+			val = lm90_read16(client, LM90_REG_R_REMOTE_TEMPH,
+				  	LM90_REG_R_REMOTE_TEMPL);
+			if (val < 0)
+				return val;
+			data->temp11[REMOTE_TEMP] = val;
+		}
+
 
 		val = lm90_read_reg(client, LM90_REG_R_STATUS);
 		if (val < 0)
@@ -1954,6 +1982,7 @@ static int lm90_probe(struct i2c_client *client)
 	}
 
 	data->reg_local_ext = lm90_params[data->kind].reg_local_ext;
+	data->reg_remote_ext = lm90_params[data->kind].reg_remote_ext;
 
 	/* Set maximum conversion rate */
 	data->max_convrate = lm90_params[data->kind].max_convrate;
