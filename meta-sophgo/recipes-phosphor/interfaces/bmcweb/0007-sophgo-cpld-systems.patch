diff --git a/redfish-core/lib/systems.hpp b/redfish-core/lib/systems.hpp
index a752420a..130248af 100644
--- a/redfish-core/lib/systems.hpp
+++ b/redfish-core/lib/systems.hpp
@@ -675,7 +675,31 @@ inline void getHddExistState(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
     getExistState(aResp, "hdd", "Hdd", 4);
 }
 
+inline void getCpldVersion(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
+{
+    sdbusplus::asio::getProperty<std::string>(
+            *crow::connections::systemBus, "xyz.openbmc_project.State.CPLD",
+            "/xyz/openbmc_project/state/cpld/softVersion", "xyz.openbmc_project.State.Cpld.Version",
+            "VERSION",
+            [aResp](const boost::system::error_code ec,
+                    const std::string& cpldVerion) {
+            if (ec)
+            {
+                if (ec == boost::system::errc::host_unreachable)
+                {
+                    // Service not available, no error, just don't return
+                    // host state info
+                    BMCWEB_LOG_DEBUG << "Service not available " << ec;
+                    return;
+                }
+                BMCWEB_LOG_ERROR << "DBUS response error " << ec;
+                messages::internalError(aResp->res);
+                return;
+            }
 
+            aResp->res.jsonValue["CpldInfo"] = cpldVerion;
+        });
+}
 
 /**
  * @brief Translates boot source DBUS property value to redfish.
@@ -3165,6 +3189,7 @@ inline void requestRoutesSystems(App& app)
         getSataExistState(asyncResp);
         getFanExistState(asyncResp);
         getHddExistState(asyncResp);
+        getCpldVersion(asyncResp);
         getBootProperties(asyncResp);
         getBootProgress(asyncResp);
         getBootProgressLastStateTime(asyncResp);
