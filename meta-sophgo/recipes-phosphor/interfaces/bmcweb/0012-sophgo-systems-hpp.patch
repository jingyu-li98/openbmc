diff --git a/redfish-core/lib/systems.hpp b/redfish-core/lib/systems.hpp
index c6da4a45..444b179b 100644
--- a/redfish-core/lib/systems.hpp
+++ b/redfish-core/lib/systems.hpp
@@ -1312,6 +1312,15 @@ inline void getAutomaticRetry(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
         });
 }
 
+
+
+
+inline void
+    getFanSpeed(App& app,const std::shared_ptr<bmcweb::AsyncResp>& aResp)
+{
+    aResp->res.jsonValue["FanSpeed"] = app.fanSpeed;
+}
+
 /**
  * @brief Retrieves power restore policy over DBUS.
  *
@@ -1890,30 +1899,30 @@ inline void setAutomaticRetry(const std::shared_ptr<bmcweb::AsyncResp>& aResp,
 
 
 inline void
-    setFanSpeed(/* const std::shared_ptr<bmcweb::AsyncResp>& aResp, */
-                          const std::string& fanSpeed)
+    setFanSpeed(App& app,  const std::string& fanSpeed)
 {
-    BMCWEB_LOG_DEBUG << "Set fan speed.";
-    auto setFanSpeedFile = "set-fan-rate@" + fanSpeed + ".service";
+    std::string lowSpeed("low");
+    std::string mediumSpeed("medium");
+    std::string highSpeed("high");
+    std::string autoSpeed("auto");
+    std::string pwm;
 
-#if 0
-    auto io = std::make_shared<boost::asio::io_context>();
-    sdbusplus::asio::connection bus(io);
+    BMCWEB_LOG_DEBUG << "Set fan speed.";
 
-    auto method = bus.new_method_call("org.freedesktop.systemd1", "/org/freedesktop/systemd1",
-                                      "org.freedesktop.systemd1.Manager", "StartUnit");
+    app.fanSpeed = fanSpeed;
 
-    method.append(setFanSpeedFile, "replace");
-    try
-    {
-        auto reply = bus.call(method);
-    }
-    catch (const sdbusplus::exception_t& e)
-    {
-        messages::internalError(aResp->res);
-        return;
+    if (fanSpeed == lowSpeed) {
+        pwm = "110";
+    } else if (fanSpeed == mediumSpeed) {
+        pwm = "180";
+    } else if (fanSpeed == highSpeed) {
+        pwm = "255";
+    } else if (fanSpeed == autoSpeed) {
+        pwm = "auto";
     }
-#else
+
+    auto setFanSpeedFile = "set-fan-rate@" + pwm + ".service";
+
     std::string cmd = "systemctl start " + setFanSpeedFile;
     int result = std::system(cmd.c_str());
 
@@ -1923,7 +1932,6 @@ inline void
     } else {
         return;
     }
-#endif
 }
 
 
@@ -3240,6 +3248,7 @@ inline void requestRoutesSystems(App& app)
         getPCIeDeviceList(asyncResp, "PCIeDevices");
         getHostWatchdogTimer(asyncResp);
         getPowerRestorePolicy(asyncResp);
+        getFanSpeed(app, asyncResp);
         getAutomaticRetry(asyncResp);
         getLastResetTime(asyncResp);
 #ifdef BMCWEB_ENABLE_REDFISH_PROVISIONING_FEATURE
@@ -3365,7 +3374,7 @@ inline void requestRoutesSystems(App& app)
 
         if (fanSpeed)
         {
-            setFanSpeed(/* asyncResp, */ *fanSpeed);
+            setFanSpeed(app, *fanSpeed);
         }
 
         if (powerMode)
